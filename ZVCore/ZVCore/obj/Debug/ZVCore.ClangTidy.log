D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
Error while processing D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core\ZVsystem.cpp.
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
Error while processing D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core\ZVwindow.cpp.
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
Error while processing D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\ZVImguiTheme.cpp.
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
Error while processing D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\ZVProfiler_internal.cpp.
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
Error while processing D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\ZVTexture_internal.cpp.
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
Error while processing D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\ZVimguiManager.cpp.
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
Error while processing D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVButton.cpp.
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
Error while processing D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVComboBox.cpp.
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
Error while processing D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVDialog.cpp.
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
Error while processing D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVFileDialog.cpp.
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
Error while processing D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVFont.cpp.
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
Error while processing D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVHotKey.cpp.
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
Error while processing D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVImage.cpp.
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
Error while processing D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVImageButton.cpp.
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
Error while processing D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVInputText.cpp.
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
Error while processing D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVKeyMap.cpp.
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
Error while processing D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVMenuItem.cpp.
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
Error while processing D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVMenubar.cpp.
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
Error while processing D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVProfiler.cpp.
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
Error while processing D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVTabBar.cpp.
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
Error while processing D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVTabItem.cpp.
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
Error while processing D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVTable.cpp.
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
Error while processing D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVTableHeader.cpp.
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
Error while processing D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVTexture.cpp.
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
Error while processing D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVToggleButton.cpp.
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
D:\Dev\ZVLab\ZScreen\.clang-tidy:1:1: error: not a mapping
Checks '-,readability-identifier-naming'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Error parsing D:\Dev\ZVLab\ZScreen\.clang-tidy: invalid argument
Error while processing D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\windows\ZVwindow_win.cpp.
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\memory:3300:9: warning: delete called on 'ZVLab::CzvWindow' that is abstract but has non-virtual destructor [clang-diagnostic-delete-abstract-non-virtual-dtor]
 3300 |         delete _Ptr;
      |         ^
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\memory:3410:13: note: in instantiation of member function 'std::default_delete<ZVLab::CzvWindow>::operator()' requested here
 3410 |             _Mypair._Get_first()(_Mypair._Myval2);
      |             ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core\ZVsystem.cpp:19:13: note: in instantiation of member function 'std::unique_ptr<ZVLab::CzvWindow>::~unique_ptr' requested here
   19 |         CzvSystem::CzvSystem()
      |                    ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVappEvent.h:27:3: error: pasting formed '::WindowResize', an invalid preprocessing token [clang-diagnostic-invalid-token-paste]
   27 |                 DEventClassType(WindowResize)
      |                 ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVEvent.h:35:91: note: expanded from macro 'DEventClassType'
   35 | #define DEventClassType(type) static EzvEventType GetStaticType() { return (EzvEventType::##type); }\
      |                                                                                           ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVappEvent.h:36:3: error: pasting formed '::WindowClose', an invalid preprocessing token [clang-diagnostic-invalid-token-paste]
   36 |                 DEventClassType(WindowClose)
      |                 ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVEvent.h:35:91: note: expanded from macro 'DEventClassType'
   35 | #define DEventClassType(type) static EzvEventType GetStaticType() { return (EzvEventType::##type); }\
      |                                                                                           ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVappEvent.h:45:3: error: pasting formed '::AppTick', an invalid preprocessing token [clang-diagnostic-invalid-token-paste]
   45 |                 DEventClassType(AppTick)
      |                 ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVEvent.h:35:91: note: expanded from macro 'DEventClassType'
   35 | #define DEventClassType(type) static EzvEventType GetStaticType() { return (EzvEventType::##type); }\
      |                                                                                           ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVappEvent.h:54:3: error: pasting formed '::AppUpdate', an invalid preprocessing token [clang-diagnostic-invalid-token-paste]
   54 |                 DEventClassType(AppUpdate)
      |                 ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVEvent.h:35:91: note: expanded from macro 'DEventClassType'
   35 | #define DEventClassType(type) static EzvEventType GetStaticType() { return (EzvEventType::##type); }\
      |                                                                                           ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVappEvent.h:63:3: error: pasting formed '::AppRender', an invalid preprocessing token [clang-diagnostic-invalid-token-paste]
   63 |                 DEventClassType(AppRender)
      |                 ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVEvent.h:35:91: note: expanded from macro 'DEventClassType'
   35 | #define DEventClassType(type) static EzvEventType GetStaticType() { return (EzvEventType::##type); }\
      |                                                                                           ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVkeyEvent.h:44:3: error: pasting formed '::KeyPressed', an invalid preprocessing token [clang-diagnostic-invalid-token-paste]
   44 |                 DEventClassType(KeyPressed)
      |                 ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVEvent.h:35:91: note: expanded from macro 'DEventClassType'
   35 | #define DEventClassType(type) static EzvEventType GetStaticType() { return (EzvEventType::##type); }\
      |                                                                                           ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVkeyEvent.h:60:3: error: pasting formed '::KeyReleased', an invalid preprocessing token [clang-diagnostic-invalid-token-paste]
   60 |                 DEventClassType(KeyReleased)
      |                 ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVEvent.h:35:91: note: expanded from macro 'DEventClassType'
   35 | #define DEventClassType(type) static EzvEventType GetStaticType() { return (EzvEventType::##type); }\
      |                                                                                           ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVkeyEvent.h:77:3: error: pasting formed '::KeyTyped', an invalid preprocessing token [clang-diagnostic-invalid-token-paste]
   77 |                 DEventClassType(KeyTyped)
      |                 ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVEvent.h:35:91: note: expanded from macro 'DEventClassType'
   35 | #define DEventClassType(type) static EzvEventType GetStaticType() { return (EzvEventType::##type); }\
      |                                                                                           ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVmouseEvent.h:30:3: error: pasting formed '::MouseMoved', an invalid preprocessing token [clang-diagnostic-invalid-token-paste]
   30 |                 DEventClassType(MouseMoved)
      |                 ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVEvent.h:35:91: note: expanded from macro 'DEventClassType'
   35 | #define DEventClassType(type) static EzvEventType GetStaticType() { return (EzvEventType::##type); }\
      |                                                                                           ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVmouseEvent.h:53:3: error: pasting formed '::MouseScrolled', an invalid preprocessing token [clang-diagnostic-invalid-token-paste]
   53 |                 DEventClassType(MouseScrolled)
      |                 ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVEvent.h:35:91: note: expanded from macro 'DEventClassType'
   35 | #define DEventClassType(type) static EzvEventType GetStaticType() { return (EzvEventType::##type); }\
      |                                                                                           ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVmouseEvent.h:85:3: error: pasting formed '::MouseButtonPressed', an invalid preprocessing token [clang-diagnostic-invalid-token-paste]
   85 |                 DEventClassType(MouseButtonPressed)
      |                 ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVEvent.h:35:91: note: expanded from macro 'DEventClassType'
   35 | #define DEventClassType(type) static EzvEventType GetStaticType() { return (EzvEventType::##type); }\
      |                                                                                           ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVmouseEvent.h:101:3: error: pasting formed '::MouseButtonReleased', an invalid preprocessing token [clang-diagnostic-invalid-token-paste]
  101 |                 DEventClassType(MouseButtonReleased)
      |                 ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVEvent.h:35:91: note: expanded from macro 'DEventClassType'
   35 | #define DEventClassType(type) static EzvEventType GetStaticType() { return (EzvEventType::##type); }\
      |                                                                                           ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core\ZVsystem.cpp:66:11: warning: cast to 'void *' from smaller integer type 'GLuint' (aka 'unsigned int') [clang-diagnostic-int-to-void-pointer-cast]
   66 |                         return (void*)tex;
      |                                ^~~~~~~~~~
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core\ZVsystem.cpp:69:19: warning: cast to smaller integer type 'unsigned int' from 'void *' [clang-diagnostic-void-pointer-to-int-cast]
   69 |                         GLuint texID = (GLuint)tex;
      |                                        ^~~~~~~~~~~
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core\ZVsystem.cpp:125:25: error: left operand to ? is void, but right operand is of type 'CzvFontData *' [clang-diagnostic-error]
  125 |                         (s_pFont != nullptr) ?
      |                                              ^
  126 |                                 s_pFont->Begin(true) : s_pFont;
      |                                 ~~~~~~~~~~~~~~~~~~~~   ~~~~~~~
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core\ZVsystem.cpp:156:25: error: left operand to ? is void, but right operand is of type 'CzvFontData *' [clang-diagnostic-error]
  156 |                         (s_pFont != nullptr) ?
      |                                              ^
  157 |                                 s_pFont->End() : s_pFont;
      |                                 ~~~~~~~~~~~~~~   ~~~~~~~
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core\ZVsystem.cpp:201:17: warning: 14 enumeration values not handled in switch: 'None', 'WindowFocus', 'WindowLostFocus'... [clang-diagnostic-switch]
  201 |                 switch (event.GetEventType())
      |                         ~~~~~~^~~~~~~~~~~~~~
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\ZVProfiler_internal.cpp:84:16: warning: format string is not a string literal (potentially insecure) [clang-diagnostic-format-security]
   84 |                         ImGui::Text(profile->first.c_str());
      |                                     ^~~~~~~~~~~~~~~~~~~~~~
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\ZVProfiler_internal.cpp:84:16: note: treat the string as an argument to avoid this
   84 |                         ImGui::Text(profile->first.c_str());
      |                                     ^
      |                                     "%s", 
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\ZVimguiManager.cpp:1:10: warning: non-portable path to file '"ZVimguiManager.h"'; specified path differs in case from file name on disk [clang-diagnostic-nonportable-include-path]
    1 | #include "ZVImguiManager.h"
      |          ^~~~~~~~~~~~~~~~~~
      |          "ZVimguiManager.h"
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\ZVimguiManager.cpp:11:6: warning: unused function 'glfw_error_callback' [clang-diagnostic-unused-function]
   11 | void glfw_error_callback(int error, const char * description) {
      |      ^~~~~~~~~~~~~~~~~~~
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\ZVimguiManager.cpp:61:11: warning: cast to 'void *' from smaller integer type 'GLuint' (aka 'unsigned int') [clang-diagnostic-int-to-void-pointer-cast]
   61 |                         return (void*)tex;
      |                                ^~~~~~~~~~
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVComboBox.cpp:12:9: error: non-const lvalue reference to type 'conditional_t<...>' cannot bind to a temporary of type 'conditional_t<...>' [clang-diagnostic-error]
   12 |                 auto& f = s_mComboStatusMap.find(key);
      |                       ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVComboBox.cpp:28:9: error: non-const lvalue reference to type 'conditional_t<...>' cannot bind to a temporary of type 'conditional_t<...>' [clang-diagnostic-error]
   28 |                 auto& f = s_mComboStatusMap.find(key);
      |                       ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVComboBox.cpp:36:9: error: non-const lvalue reference to type 'conditional_t<...>' cannot bind to a temporary of type 'conditional_t<...>' [clang-diagnostic-error]
   36 |                 auto& f = s_mComboStatusMap.find(key);
      |                       ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVComboBox.cpp:142:9: error: non-const lvalue reference to type 'pair<...>' cannot bind to a temporary of type 'pair<...>' [clang-diagnostic-error]
  142 |                 auto& currItemData = ::sGetComboBoxStatus(m_strLabel);
      |                       ^              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVComboBox.cpp:172:9: error: non-const lvalue reference to type 'pair<...>' cannot bind to a temporary of type 'pair<...>' [clang-diagnostic-error]
  172 |                 auto& currItemData = ::sGetComboBoxStatus(m_strLabel);
      |                       ^              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVComboBox.cpp:181:17: warning: format string is not a string literal (potentially insecure) [clang-diagnostic-format-security]
  181 |                                 ImGui::Text(resultItem.c_str());
      |                                             ^~~~~~~~~~~~~~~~~~
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVComboBox.cpp:181:17: note: treat the string as an argument to avoid this
  181 |                                 ImGui::Text(resultItem.c_str());
      |                                             ^
      |                                             "%s", 
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVDialog.cpp:181:8: warning: unused variable 'result' [clang-diagnostic-unused-variable]
  181 |                 bool result;
      |                      ^~~~~~
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVDialog.cpp:204:8: warning: unused variable 'result' [clang-diagnostic-unused-variable]
  204 |                 bool result;
      |                      ^~~~~~
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVDialog.cpp:223:8: warning: unused variable 'result' [clang-diagnostic-unused-variable]
  223 |                 bool result;
      |                      ^~~~~~
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVDialog.cpp:244:8: warning: unused variable 'result' [clang-diagnostic-unused-variable]
  244 |                 bool result;
      |                      ^~~~~~
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVDialog.cpp:268:8: warning: unused variable 'result' [clang-diagnostic-unused-variable]
  268 |                 bool result;
      |                      ^~~~~~
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVDialog.cpp:387:8: warning: unused variable 'result' [clang-diagnostic-unused-variable]
  387 |                 bool result = false;
      |                      ^~~~~~
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVDialog.cpp:473:9: error: non-const lvalue reference to type 'ImVec2' cannot bind to a temporary of type 'ImVec2' [clang-diagnostic-error]
  473 |                 auto& prevPos = ImGui::GetCursorPos();
      |                       ^         ~~~~~~~~~~~~~~~~~~~~~
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVFileDialog.cpp:104:14: warning: using the result of an assignment as a condition without parentheses [clang-diagnostic-parentheses]
  104 |                 if (result = ifd::FileDialog::Instance().IsDone(m_strLabel))
      |                     ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVFileDialog.cpp:104:14: note: place parentheses around the assignment to silence this warning
  104 |                 if (result = ifd::FileDialog::Instance().IsDone(m_strLabel))
      |                            ^                                               
      |                     (                                                      )
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVFileDialog.cpp:104:14: note: use '==' to turn this assignment into an equality comparison
  104 |                 if (result = ifd::FileDialog::Instance().IsDone(m_strLabel))
      |                            ^
      |                            ==
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVImage.cpp:9:16: error: pasting formed '("Image"', an invalid preprocessing token [clang-diagnostic-invalid-token-paste]
    9 |                 : m_strLabel(DBindLabelNumbering("Image", CzvImage::GetImageCount()))
      |                              ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export/ZVGuiConfig.h:9:57: note: expanded from macro 'DBindLabelNumbering'
    9 | #define DBindLabelNumbering(label, number) (std::string(##label) + std::to_string(##number))
      |                                                         ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVImage.cpp:9:16: error: pasting formed '(CzvImage', an invalid preprocessing token [clang-diagnostic-invalid-token-paste]
    9 |                 : m_strLabel(DBindLabelNumbering("Image", CzvImage::GetImageCount()))
      |                              ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export/ZVGuiConfig.h:9:83: note: expanded from macro 'DBindLabelNumbering'
    9 | #define DBindLabelNumbering(label, number) (std::string(##label) + std::to_string(##number))
      |                                                                                   ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVImage.cpp:86:4: error: use of undeclared identifier 'DDrawTextureImage' [clang-diagnostic-error]
   86 |                         DDrawTextureImage
      |                         ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVImage.cpp:90:53: error: too many arguments provided to function-like macro invocation [clang-diagnostic-error]
   90 |                                 (size.y > 0) ? size.y : m_spTexture->GetHeight(),
      |                                                                                 ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export/ZVGuiConfig.h:11:9: note: macro 'DDrawTextureImage' defined here
   11 | #define DDrawTextureImage(texture, width, height) ImGui::Image(DGLuint2ImTextureID(texture), {static_cast<float>(width), static_cast<float>(height)});
      |         ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVImageButton.cpp:32:15: error: pasting formed '("ImageButton"', an invalid preprocessing token [clang-diagnostic-invalid-token-paste]
   32 |                 : CzvButton(DBindLabelNumbering("ImageButton", CzvButton::GetButtonCount()))
      |                             ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export/ZVGuiConfig.h:9:57: note: expanded from macro 'DBindLabelNumbering'
    9 | #define DBindLabelNumbering(label, number) (std::string(##label) + std::to_string(##number))
      |                                                         ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVImageButton.cpp:32:15: error: pasting formed '(CzvButton', an invalid preprocessing token [clang-diagnostic-invalid-token-paste]
   32 |                 : CzvButton(DBindLabelNumbering("ImageButton", CzvButton::GetButtonCount()))
      |                             ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export/ZVGuiConfig.h:9:83: note: expanded from macro 'DBindLabelNumbering'
    9 | #define DBindLabelNumbering(label, number) (std::string(##label) + std::to_string(##number))
      |                                                                                   ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVInputText.cpp:8:9: error: non-const lvalue reference to type 'conditional_t<...>' cannot bind to a temporary of type 'conditional_t<...>' [clang-diagnostic-error]
    8 |                 auto& f = s_mInputTextMap.find(key);
      |                       ^   ~~~~~~~~~~~~~~~~~~~~~~~~~
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVInputText.cpp:18:9: error: non-const lvalue reference to type 'conditional_t<...>' cannot bind to a temporary of type 'conditional_t<...>' [clang-diagnostic-error]
   18 |                 auto& f = s_mInputTextMap.find(key);
      |                       ^   ~~~~~~~~~~~~~~~~~~~~~~~~~
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVInputText.cpp:26:9: error: non-const lvalue reference to type 'conditional_t<...>' cannot bind to a temporary of type 'conditional_t<...>' [clang-diagnostic-error]
   26 |                 auto& f = s_mInputTextMap.find(key);
      |                       ^   ~~~~~~~~~~~~~~~~~~~~~~~~~
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVInputText.cpp:112:9: error: non-const lvalue reference to type '_String_const_iterator<...>' cannot bind to a temporary of type '_String_const_iterator<...>' [clang-diagnostic-error]
  112 |                 auto& bIter = src.begin();
      |                       ^       ~~~~~~~~~~~
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVTable.cpp:168:9: warning: Value stored to 'col' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  168 |                                 int col = this->GetColSize();
      |                                     ^~~   ~~~~~~~~~~~~~~~~~~
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVTable.cpp:168:9: note: Value stored to 'col' during its initialization is never read
  168 |                                 int col = this->GetColSize();
      |                                     ^~~   ~~~~~~~~~~~~~~~~~~
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVTable.cpp:168:9: warning: unused variable 'col' [clang-diagnostic-unused-variable]
  168 |                                 int col = this->GetColSize();
      |                                     ^~~
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVTable.cpp:201:5: warning: Value stored to 'bFind' is never read [clang-analyzer-deadcode.DeadStores]
  201 |                                 bFind = true;
      |                                 ^       ~~~~
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVTable.cpp:201:5: note: Value stored to 'bFind' is never read
  201 |                                 bFind = true;
      |                                 ^       ~~~~
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVTableHeader.cpp:266:17: warning: format string is not a string literal (potentially insecure) [clang-diagnostic-format-security]
  266 |                                 ImGui::Text(strText.c_str());
      |                                             ^~~~~~~~~~~~~~~
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVTableHeader.cpp:266:17: note: treat the string as an argument to avoid this
  266 |                                 ImGui::Text(strText.c_str());
      |                                             ^
      |                                             "%s", 
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVToggleButton.cpp:9:9: error: non-const lvalue reference to type 'conditional_t<...>' cannot bind to a temporary of type 'conditional_t<...>' [clang-diagnostic-error]
    9 |                 auto& f = s_mToggleStatusMap.find(key);
      |                       ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVToggleButton.cpp:19:9: error: non-const lvalue reference to type 'conditional_t<...>' cannot bind to a temporary of type 'conditional_t<...>' [clang-diagnostic-error]
   19 |                 auto& f = s_mToggleStatusMap.find(key);
      |                       ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\platform\imgui\export\ZVToggleButton.cpp:27:9: error: non-const lvalue reference to type 'conditional_t<...>' cannot bind to a temporary of type 'conditional_t<...>' [clang-diagnostic-error]
   27 |                 auto& f = s_mToggleStatusMap.find(key);
      |                       ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVappEvent.h:27:3: error: pasting formed '::WindowResize', an invalid preprocessing token [clang-diagnostic-invalid-token-paste]
   27 |                 DEventClassType(WindowResize)
      |                 ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVEvent.h:35:91: note: expanded from macro 'DEventClassType'
   35 | #define DEventClassType(type) static EzvEventType GetStaticType() { return (EzvEventType::##type); }\
      |                                                                                           ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVappEvent.h:36:3: error: pasting formed '::WindowClose', an invalid preprocessing token [clang-diagnostic-invalid-token-paste]
   36 |                 DEventClassType(WindowClose)
      |                 ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVEvent.h:35:91: note: expanded from macro 'DEventClassType'
   35 | #define DEventClassType(type) static EzvEventType GetStaticType() { return (EzvEventType::##type); }\
      |                                                                                           ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVappEvent.h:45:3: error: pasting formed '::AppTick', an invalid preprocessing token [clang-diagnostic-invalid-token-paste]
   45 |                 DEventClassType(AppTick)
      |                 ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVEvent.h:35:91: note: expanded from macro 'DEventClassType'
   35 | #define DEventClassType(type) static EzvEventType GetStaticType() { return (EzvEventType::##type); }\
      |                                                                                           ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVappEvent.h:54:3: error: pasting formed '::AppUpdate', an invalid preprocessing token [clang-diagnostic-invalid-token-paste]
   54 |                 DEventClassType(AppUpdate)
      |                 ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVEvent.h:35:91: note: expanded from macro 'DEventClassType'
Suppressed 161 warnings (161 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.
Found compiler error(s).
   35 | #define DEventClassType(type) static EzvEventType GetStaticType() { return (EzvEventType::##type); }\
      |                                                                                           ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVappEvent.h:63:3: error: pasting formed '::AppRender', an invalid preprocessing token [clang-diagnostic-invalid-token-paste]
   63 |                 DEventClassType(AppRender)
      |                 ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVEvent.h:35:91: note: expanded from macro 'DEventClassType'
   35 | #define DEventClassType(type) static EzvEventType GetStaticType() { return (EzvEventType::##type); }\
      |                                                                                           ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVkeyEvent.h:44:3: error: pasting formed '::KeyPressed', an invalid preprocessing token [clang-diagnostic-invalid-token-paste]
   44 |                 DEventClassType(KeyPressed)
      |                 ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVEvent.h:35:91: note: expanded from macro 'DEventClassType'
   35 | #define DEventClassType(type) static EzvEventType GetStaticType() { return (EzvEventType::##type); }\
      |                                                                                           ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVkeyEvent.h:60:3: error: pasting formed '::KeyReleased', an invalid preprocessing token [clang-diagnostic-invalid-token-paste]
   60 |                 DEventClassType(KeyReleased)
      |                 ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVEvent.h:35:91: note: expanded from macro 'DEventClassType'
   35 | #define DEventClassType(type) static EzvEventType GetStaticType() { return (EzvEventType::##type); }\
      |                                                                                           ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVkeyEvent.h:77:3: error: pasting formed '::KeyTyped', an invalid preprocessing token [clang-diagnostic-invalid-token-paste]
   77 |                 DEventClassType(KeyTyped)
      |                 ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVEvent.h:35:91: note: expanded from macro 'DEventClassType'
   35 | #define DEventClassType(type) static EzvEventType GetStaticType() { return (EzvEventType::##type); }\
      |                                                                                           ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVmouseEvent.h:30:3: error: pasting formed '::MouseMoved', an invalid preprocessing token [clang-diagnostic-invalid-token-paste]
   30 |                 DEventClassType(MouseMoved)
      |                 ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVEvent.h:35:91: note: expanded from macro 'DEventClassType'
   35 | #define DEventClassType(type) static EzvEventType GetStaticType() { return (EzvEventType::##type); }\
      |                                                                                           ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVmouseEvent.h:53:3: error: pasting formed '::MouseScrolled', an invalid preprocessing token [clang-diagnostic-invalid-token-paste]
   53 |                 DEventClassType(MouseScrolled)
      |                 ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVEvent.h:35:91: note: expanded from macro 'DEventClassType'
   35 | #define DEventClassType(type) static EzvEventType GetStaticType() { return (EzvEventType::##type); }\
      |                                                                                           ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVmouseEvent.h:85:3: error: pasting formed '::MouseButtonPressed', an invalid preprocessing token [clang-diagnostic-invalid-token-paste]
   85 |                 DEventClassType(MouseButtonPressed)
      |                 ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVEvent.h:35:91: note: expanded from macro 'DEventClassType'
   35 | #define DEventClassType(type) static EzvEventType GetStaticType() { return (EzvEventType::##type); }\
      |                                                                                           ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVmouseEvent.h:101:3: error: pasting formed '::MouseButtonReleased', an invalid preprocessing token [clang-diagnostic-invalid-token-paste]
  101 |                 DEventClassType(MouseButtonReleased)
      |                 ^
D:\Dev\ZVLab\ZScreen\ZVCore\ZVCore\src\core/../events/ZVEvent.h:35:91: note: expanded from macro 'DEventClassType'
   35 | #define DEventClassType(type) static EzvEventType GetStaticType() { return (EzvEventType::##type); }\
      |                                                                                           ^
